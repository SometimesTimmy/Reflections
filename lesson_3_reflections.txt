When would you want to use a remote repository rather than keeping all your work local?
  	Remote repositories are more useful if the project is owned by people from different offices.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	Remote repository can be shared with others. Manual pull would allow you to avoid situations where you happen to be the only person left who has not pulled from the remote repository when a critical file has been removed.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	Fork: creates a clone of others' repository while giving them the proper credit since it can be traced back to the original owner.
	Clone: allows for an isolated copy of a repository for one to modify without impacting the original
	Branches: allows for one to test a small new feature that deviates from the master with the option to one day be merged back to the master or discarded

What is the benefit of having a copy of the last known state of the remote stored locally?
	This allows for the user to foresee merge conflicts in the event of a push or pull.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	Without Git or Github, I would use a live document editor like Google Docs and have all the collaborators upload files with their initials and revs. Routine meetings would be required to consolidate the various contributions. It would definitely be harder.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	Separate branch: larger/experimental changes
	Directly in master: small incremental updates/fixes